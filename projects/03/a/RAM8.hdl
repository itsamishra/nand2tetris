// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=bit-0, b=bit-1, c=bit-2, d=bit-3, e=bit-4, f=bit-5, g=bit-6, h=bit-7);

    Register(in=in, load=bit-0, out=out-0);
    Register(in=in, load=bit-1, out=out-1);
    Register(in=in, load=bit-2, out=out-2);
    Register(in=in, load=bit-3, out=out-3);
    Register(in=in, load=bit-4, out=out-4);
    Register(in=in, load=bit-5, out=out-5);
    Register(in=in, load=bit-6, out=out-6);
    Register(in=in, load=bit-7, out=out-7);

    Mux8Way16(a=out-0, b=out-1, c=out-2, d=out-3, e=out-4, f=out-5, g=out-6, h=out-7, sel=address, out=out);
}